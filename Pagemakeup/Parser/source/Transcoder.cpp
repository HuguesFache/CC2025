/*
//	File:	Transcoder.cpp
//
//	Date:	22-Apr-2003
//
//  Author : Trias
//
*/

#include "VCPlugInHeaders.h"

#include "Transcoder.h"


/*************** Conversion Tables ******************/

	// Default table
	// -------------

#ifdef MACINTOSH

	uchar	DefaultTable[256] = {
		
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	0x00,	DEL_CH,	0x00,	DEL_CH,	0x00,	0x00,	DEL_CH,	0x00,	X_EF,
	/* 10 */	X_EP,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 80 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 90 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* A0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* B0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* C0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* D0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* E0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* F0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EF,	X_ED,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EC,	DEL_CH,
	
	};
	
	
	// conversion table from DOS to Mac
	// --------------------------------

	uchar	DosToMac[256] = {
		
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x0a,	0x00,	0x00,	0x0D,	0x00,	X_EF,
	/* 10 */	X_EP,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x40,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 80 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 90 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* A0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* B0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* C0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* D0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* E0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* F0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EF,	X_ED,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EC,	0x00,
	
	};
	
	// conversion table from Windows to Mac
	// ------------------------------------
	

	uchar	WindowsToMac[256] = {
		
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	DEL_CH,	0x00,	0x00,	0x00,	0xFF,	0x00,	0x00,	0x00,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	DEL_CH,	0x00,	X_EF,
	/* 10 */	X_EP,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,

	/* 80 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 90 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* A0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* B0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* C0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* D0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* E0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* F0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	
	};

	// Table for mï¾Ždia system
	uchar	MacMediaSystem[256] = {
		
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	DEL_CH,	0x00,	X_EF,
	/* 10 */	X_EP,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	X_PF,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 80 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x9F,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 90 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* A0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* B0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* C0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* D0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* E0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x94,	0x95,	0x00,	0x00,	0x99,
	/* F0 */	0x00,	0x00,	0x00,	0x9E,	0x00,	0x00,	0x00,	X_EF,	X_ED,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EC,	0x00,
	
	};

	// Table for Maulde & Renou
	
	uchar	CalligrammeToMac[256] = {
		
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	0x00,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,
	/* 10 */	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 80 */	X_PF,	X_PF,	X_PF,	X_LF,	X_TAB,	DEL_CH,	X_EC,	X_ED,	X_EF,	X_EP,	0x2F,	0x83,	DEL_CH,	DEL_CH,	0x8B,	0x9B,
	/* 90 */	0xF0,	DEL_CH,	DEL_CH,	0x00,	0x00,	0x84,	0x86,	0xB7,	0xB8,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	0x98,	0x88,
	/* A0 */	0x9C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x8A,	0x00,	0x00,	0x00,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	DEL_CH,
	/* B0 */	0x00,	0x00,	X_TAB,	DEL_CH,	0x00,	DEL_CH,	0x00,	0xA8,	0x00,	0x82,	0x00,	0x00,	0x97,	DEL_CH,	DEL_CH,	0x00,
	/* C0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* D0 */	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xDD,	0x00,	0x00,	0x00,	0x00,	0x00,	0x9F,	0x87,	0x00,
	/* E0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* F0 */	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xA6,	X_PF,	0xA6,
	
	};
	
#endif


// conversion table from Dos to Windows
// ------------------------------------

#ifdef WINDOWS
	uchar   DefaultTable[256] = {
	
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	DEL_CH,	0x00,	X_EF,
	/* 10 */	X_EP,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 80 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 90 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* A0 */	0x00,	0x00,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	SUP_E,	0x00,	0x00,	0x00,
	/* B0 */	0x00,	SUP_R,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* C0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* D0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* E0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* F0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EF,	X_ED,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EC,	0x00,
	
	};
	
	
	// conversion table from DOS to Mac
	// --------------------------------

	uchar	DosToWindows[256] = {
		
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x0a,	0x00,	0x00,	0x0D,	0x00,	X_EF,
	/* 10 */	X_EP,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xFF,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	'ï¾’',	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x40,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 80 */	0xC7,	0xFC,	'ï¿©',	0xE2,	0xE4,	'ï¿ ',	0xE5,	0xE7,	0xEA,	0xEB,	'ï¿¨',	0xEF,	0xEE,	0x00,	0xC4,	0x00,
	/* 90 */	0xC9,	0xE6,	0xC6,	0xF4,	0xF6,	0xF2,	0xFB,	0xF9,	0xFF,	0xD6,	0xDC,	0xA2,	0xA3,	0xA5,	0xFF,	0x83,
	/* A0 */	0xE0,	0xEC,	0xF3,	0xF9,	0x9c,	0x8c,	0x00,	0x00,	0xBF,	0x00,	0x00,	0x00,	SUP_E,	0x00,	0xae,	0xaf,
	/* B0 */	0x00,	SUP_R,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* C0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* D0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* E0 */	0x00,	0x80,	0x00,	0x00,	0x00,	0x00,	'#',	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* F0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EF,	X_ED,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EC,	0x00,
	
	};
	
	// conversion table from Dos to Windows
	// ------------------------------------
	
	uchar	MacToWindows[256] = {
		
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	DEL_CH,	0x00,	0x00,
	/* 10 */	DEL_CH,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 80 */	0xC4,	0xC5,	0xC7,	0xC9,	0xD1,	0xD6,	0xDC,	0xE0,	0xE1,	0xE2,	0xE4,	0xE3,	0xE5,	0xE7,	0xE9,	0xE8,
	/* 90 */	0xEA,	0xEB,	0xED,	0xEC,	0xEE,	0xEF,	0xF1,	0xF3,	0xF2,	0xF4,	0xF6,	0xF5,	0xFA,	0xF9,	0xFB,	0xFC,
	/* A0 */	0x86,	0xB0,	0x00,	0x00,	0xA7,	0x95,	0xB6,	0x00,	0xAE,	0xA9,	0x99,	0xB4,	0X98,	0x00,	0xC6,	0xD8,
	/* B0 */	0x00,	0xB1,	0x8B,	0x9B,	0xA5,	0x00,	0x00,	0xDF,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xE6,	0xF8,
	/* C0 */	0xBF,	0xA1,	0xAC,	0x00,	0x00,	0x00,	0x00,	0xAB,	0xBB,	0x85,	0x00,	0xC0,	0xC3,	0xD5,	0x8C,	0x9C,
	/* D0 */	0x96,	0x97,	0x93,	0x94,	0x91,	0x92,	0x00,	0x00,	0xDD,	0xFD,	0x00,	0x80,	0x8B,	0x9B,	0xDE,	0xFE,
	/* E0 */	0x87,	0x00,	0x00,	0x84,	0x89,	0xC2,	0xCA,	0xC1,	0xCB,	0xC8,	0xCD,	0xCE,	0xCF,	0xCC,	0xD3,	0xD4,
	/* F0 */	0x00,	0xD2,	0xDA,	0xDB,	0xD9,	0xA6,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	
	};

	// Table for media system
	
	uchar	WinMediaSystem[256] = {
		
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	DEL_CH,	0x00,	X_EF,
	/* 10 */	X_EP,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 80 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 90 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* A0 */	0x00,	0x00,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	SUP_E,	0x00,	0x00,	0x00,
	/* B0 */	0x00,	SUP_R,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* C0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* D0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* E0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* F0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EF,	X_ED,	0x00,	0x00,	0x00,	0x00,	0x00,	X_EC,	0x00,
	
	};

	// Table for Maulde & Renou
	
	uchar	CalligrammeToWin[256] = {
		
	/*		 	00      01		02		03		04		05		06		07		08		09		0A		0B		0C		0D		0E		0F   	*/
	/*          -----------------------------------------------------------------------------------------------------------------------------	*/
	
	/* 00 */	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	0x00,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,
	/* 10 */	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,
	/* 20 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x92,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 30 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 40 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 50 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 60 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* 70 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x8C,
	/* 80 */	X_PF,	X_PF,	X_PF,	X_LF,	X_TAB,	DEL_CH,	X_EC,	X_ED,	X_EF,	X_EP,	0x2F,	0x83,	DEL_CH,	DEL_CH,	0x8B,	0x9B,
	/* 90 */	0xF0,	DEL_CH,	DEL_CH,	0x00,	0x00,	0x84,	0x86,	0xB7,	0xB8,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	DEL_CH,	0x98,	0x88,
	/* A0 */	0x9C,	0x00,	0x00,	0x00,	0x00,	0x00,	0x8A,	0x00,	0x00,	0x00,	0x00,	0x00,	DEL_CH,	0x00,	0x00,	DEL_CH,
	/* B0 */	0x00,	0x00,	X_TAB,	DEL_CH,	0x00,	DEL_CH,	0x00,	0xA8,	0x00,	0x82,	0x00,	0x00,	0x97,	DEL_CH,	0x85,	0x00,
	/* C0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* D0 */	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xDD,	0x00,	0x00,	0x00,	0x00,	0x00,	0x9F,	0x87,	0x00,
	/* E0 */	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	/* F0 */	DEL_CH,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0xA6,	X_PF,	0xA6,
	
	};

#endif

/* Constructor
*/
Transcoder::Transcoder(int8 whichTable)
{
	this->whichTable = whichTable;

	switch(this->whichTable)
	{
#ifdef MACINTOSH
		case WINDOWS_TABLE:
			Code = WindowsToMac;
			break;
			
		case MSDOS_TABLE:
			Code = DosToMac;
			break;
			
		case TURF_TABLE:
			Code = DosToMac;
			//LoadTurfTable();
			break;
			
		case MEDIA_SYS_TABLE:
			Code = MacMediaSystem;
			break;
		
		case CALLIGRAME:
			Code = CalligrammeToMac;
			break;
#endif

#ifdef WINDOWS
		case MACINTOSH_TABLE:
			Code = MacToWindows;
			break;
			
		case MSDOS_TABLE:
			Code = DosToWindows;
			break;

		case TURF_TABLE:
			Code = DosToWindows;
			//LoadTurfTable();
			break;
		case MEDIA_SYS_TABLE:
			Code = WinMediaSystem;		
			break;
		case CALLIGRAME:
			Code = CalligrammeToWin;
			break;
#endif
			
		case DEFAULT_TABLE:
		default:
			Code = DefaultTable;
			break;
	}
}

/* Destructor
*/
Transcoder::~Transcoder()
{
}

/* Accessor methods
*/
inline int8 Transcoder::getCurrentTable()
{
	return whichTable;
}

void Transcoder::setCurrentTable(int8 whichTable)
{
	switch(this->whichTable)
	{
#ifdef MACINTOSH
		case WINDOWS_TABLE:
			Code 	= WindowsToMac;
			break;
			
		case MSDOS_TABLE:
			Code 	= DosToMac;
			break;
			
		case TURF_TABLE:
			Code 	= DosToMac;
			//LoadTurfTable();
			break;
			
		case MEDIA_SYS_TABLE:
			Code	= MacMediaSystem;
			break;
		
		case CALLIGRAME:
			Code	= CalligrammeToMac;
			break;
#endif

#ifdef WINDOWS
		case MACINTOSH_TABLE:
			Code 	= MacToWindows;
			break;
			
		case MSDOS_TABLE:
			Code 	= DosToWindows;
			break;

		case TURF_TABLE:
			Code 	= DosToWindows;
			//LoadTurfTable();
			break;
		case MEDIA_SYS_TABLE:
			Code	= WinMediaSystem;		
			break;
		case CALLIGRAME:
			Code	= CalligrammeToWin;
			break;
#endif
			
		case DEFAULT_TABLE:
		default:
			Code 	= DefaultTable;
			break;
	}
}

/* Transcode
*/
bool8 Transcoder::Transcode(uchar& theCharacter)
{
	uchar ch;
	
	if(theCharacter < ' ') 
	{
		int16 i = 0;
		i = theCharacter;
		ch = i + 1;
	}
	ch = Code[theCharacter];
	
	if(ch == 0x00) // Don't transcode character
	{	
		return kFalse;
	}
	theCharacter = ch;
	return kTrue;
}