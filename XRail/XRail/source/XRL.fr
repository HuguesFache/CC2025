//========================================================================================
//
//  $File: $
//
//  Owner: Trias Developpement
//
//  $Author: $
//
//  $DateTime: $
//
//  $Revision: $
//
//  $Change: $
//
//  Copyright Adobe Systems Incorporated. All rights reserved.
//
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or
//  distribution of it requires the prior written permission of Adobe.
//
//========================================================================================

#include "VCPlugInHeaders.h"

// General includes:
#include "MenuDef.fh"
#include "ActionDef.fh"
#include "ActionDefs.h"
#include "AdobeMenuPositions.h"
#include "LocaleIndex.h"
#include "PMLocaleIds.h"
#include "StringTable.fh"
#include "ObjectModelTypes.fh"
#include "ShuksanID.h"
#include "ActionID.h"
#include "CommandID.h"
#include "WorkspaceID.h"
#include "DocumentID.h"
#include "SpreadID.h"
#include "WidgetID.h"
#include "BuildNumber.h"
#include "PlugInModel_UIAttributes.h"
#include "SysControlIDs.h"

// Scripting
#include "ScriptInfoTypes.fh"
#include "AppFrameworkID.h" // for kApplicationObjectScriptElement
#include "ErrorTableTypes.h" // For UserErrorTable
#include "XRLScriptingDefs.h"
#include "TextScriptID.h"
#include "INXCoreID.h"
#include "AppleScriptID.h"

// Project includes:
#include "XRLID.h"
#include "XRCID.h"
#include "GenericID.h"
#include "ShuksanID.h"
#include "TextID.h"

#ifdef __ODFRC__

/*  Plugin version definition.
*/
resource PluginVersion (kSDKDefPluginVersionResourceID)
{
kTargetVersion,
kXRLPluginID,
kSDKDefPlugInMajorVersionNumber, kSDKDefPlugInMinorVersionNumber,
kSDKDefHostMajorVersionNumber, kSDKDefHostMinorVersionNumber,
kXRLCurrentMajorFormatNumber, kXRLCurrentMinorFormatNumber,
{ kInDesignProduct, kInCopyProduct, kInDesignServerProduct},
{ kWildFS },
kModelPlugIn,
kXRLVersion
};

/*
// This is where we define we require the library plug-ins:
*/
resource PluginDependency(kSDKDefPluginDependencyResourceID)
{
kWildFS
{
kXRCPluginID,kXRCPluginName,kSDKDefPlugInMajorVersionNumber,kSDKDefPlugInMinorVersionNumber,

}
}

/*  The ExtraPluginInfo resource adds extra information to the Missing Plug-in dialog
that is popped when a document containing this plug-in's data is opened when
this plug-in is not present. These strings are not translatable strings
since they must be available when the plug-in isn't around. They get stored
in any document that this plug-in contributes data to.
*/
resource ExtraPluginInfo(1)
{
kXRLCompanyValue,			// Company name
kXRLMissingPluginURLValue,	// URL
kXRLMissingPluginAlertValue,	// Missing plug-in alert text
};

resource IgnoreTags(1)
{
kImplementationIDSpace,
{
kXRLDataPersistImpl,
kXRLPrefsDataPersistImpl,
kXRLStringDataImpl,
kXRLResaPubListImpl,
}
};

resource	ImplementationAlias(1)
{
{
kXRLStringDataImpl, kStringDataImpl,
kXRLLoginStringDataImpl, kStringDataImpl,
kXRLMakePreviewImpl, kPersistBoolDataImpl,
kXRLCreatePDFBoolDataImpl, kBoolDataImpl,
kXRLCreatePreviewBoolDataImpl, kBoolDataImpl,
kXRLPathStringDataImpl,  kStringDataImpl,
}
};


/* Boss class definition.
*/
resource ClassDescriptionTable(kSDKDefClassDescriptionTableResourceID)
{{{

/** Service provider boss class to install the idle task on startup */
Class
{
kXRLStartupShutdownBoss,
kInvalidClass,
{
/** Implementation of IStartupShutdownService that installs idle task on startup */
IID_ISTARTUPSHUTDOWN, kXRLStartupShutdownImpl,
/** identify the service type */
IID_IK2SERVICEPROVIDER, kCStartupShutdownProviderImpl,
}
},

/**
This boss provides the service of responding to document file actions.
It has two interfaces: one that tells InDesign what kind of service is
provided, and a second to provide the service.
@ingroup docwatch
*/
Class
{
kXRLResponderServiceBoss,
kInvalidClass,
{
/**
Identifies this boss as providing a responder service for
multiple document actions, such as for doc open, close, etc.
If only one service was needed, then we'd reuse an API-defined
implementation ID listed in DocumentID.h.
*/
IID_IK2SERVICEPROVIDER,	kXRLServiceProviderImpl,
/**
Performs the responder service. This implementation delivers
every service promised by the IK2ServiceProvider implementation.
*/
IID_IRESPONDER,	kXRLResponderImpl,
}
},

/** AddIn for storing a boolean value in kDocBoss */
AddIn
{
kDocBoss,
kInvalidClass,
{
IID_IMAKEPREVIEW, kXRLMakePreviewImpl,

IID_IRESAPUBLIST, kXRLResaPubListImpl,
}
},

/** AddIn for idle task and data interface representing whether it should run */
AddIn
{
kPageBoss,
kInvalidClass,
{
IID_PAGESLUGDATA, kXRLDataPersistImpl,

}
},


/** AddIn for idle task and data interface representing whether it should run */
AddIn
{
kSessionBoss,
kInvalidClass,
{
// login de l'utilisateur (identifiant)
IID_ISTRINGDATA_LOGIN, kXRLStringDataImpl,
IID_ILOGINSTRING, kXRLLoginStringDataImpl,

// Droit des utilisateurs -> Menu XRail (Vignette + PDF)
IID_ICREATEPDFBOOL, kXRLCreatePDFBoolDataImpl,
IID_ICREATEPREVIEWBOOL, kXRLCreatePreviewBoolDataImpl,

IID_IAUTOCLOSINGDIALOG, kXRLAutoClosingDialogImpl,
}
},


/**
Ce boss sert ^ pouvoir recevoir un Notify lors d'un Set, ainsi qu'^ pouvoir
Zcrire les valeurs persistentes grace ^ une commande.
*/
Class
{
kXRLSetPageSlugDataCmdBoss,
kInvalidClass,
{
IID_ICOMMAND, kXRLSetPageSlugDataCmdImpl,

IID_PAGESLUGDATA, kXRLDataPersistImpl, // XRail ID to apply

IID_IINTDATA, kIntDataImpl,	// index of page
}
},
/**
Provides the command for setting the Snapshot tool's preference.

@ingroup snapshot
*/

Class
{
kXRLScriptProviderBoss,
kBaseScriptProviderBoss,
{
IID_ISCRIPTPROVIDER, kXRLScriptProviderImpl,
}
},

Class
{
kXRLSetPrefsCmdBoss,
kInvalidClass,
{
/**
Provide the implementation for the command to set up the snapshot tool's
preference. The prefs are saved only on the session workspace & the itemlist
is not used in the command. The command performs notification on kWorkspaceBoss
for IID_IXRAILPREFSDATA.

*/
IID_ICOMMAND, kXRLSetPrefsCmdImpl,
/**
Provide the non-persistent implementation for IXRailPrefsData.
*/
IID_IXRAILPREFSDATA, kXRLPrefsDataPersistImpl,
}
},

/**
Adds one interface ISnapPrefsData to kWorkspaceBoss. The
implementation specifies how to get and set a set of preference value.

@ingroup snapshot
*/
AddIn
{
kWorkspaceBoss,
kInvalidClass,
{
/**
Persistent implementation of ISnapPrefsData interface.
*/
IID_IXRAILPREFSDATA, kXRLPrefsDataPersistImpl,

}
},

/** Command to set boolean data (IID_IMAKEPREVIEW) on kDocBoss
*/
Class
{
kXRLSetMakePreviewCmdBoss,
kInvalidClass,
{
IID_ICOMMAND, kXRLSetMakePreviewCmdImpl,

IID_IBOOLDATA, kBoolDataImpl,
}
},

/** Command to set resa pub list data (IID_IRESAPUBLIST) on kDocBoss
*/
Class
{
kXRLSetResaPubListCmdBoss,
kInvalidClass,
{
IID_ICOMMAND, kXRLSetResaPubListCmdImpl,

IID_IRESAPUBLIST, kXRLResaPubListImpl,
}
},

}}};

/*  Implementation definition.
*/
resource FactoryList (kSDKDefFactoryListResourceID)
{
kImplementationIDSpace,
{
#include "XRLFactoryList.h"
}
};

/*  LocaleIndex
The LocaleIndex should have indicies that point at your
localizations for each language system that you are localized for.
*/
/*  String LocaleIndex.
*/
resource LocaleIndex ( kSDKDefStringsResourceID)
{
kStringTableRsrcType,
{
kWildFS, k_enUS, kSDKDefStringsResourceID + index_frFR
kWildFS, k_enGB, kSDKDefStringsResourceID + index_frFR
kWildFS, k_deDE, kSDKDefStringsResourceID + index_enUS
kWildFS, k_frFR, kSDKDefStringsResourceID + index_frFR
kWildFS, k_esES, kSDKDefStringsResourceID + index_enUS
kWildFS, k_ptBR, kSDKDefStringsResourceID + index_enUS
kWildFS, k_svSE, kSDKDefStringsResourceID + index_enUS
kWildFS, k_daDK, kSDKDefStringsResourceID + index_enUS
kWildFS, k_nlNL, kSDKDefStringsResourceID + index_enUS
kWildFS, k_itIT, kSDKDefStringsResourceID + index_enUS
kWildFS, k_nbNO, kSDKDefStringsResourceID + index_enUS
kWildFS, k_fiFI, kSDKDefStringsResourceID + index_enUS
kInDesignJapaneseFS, k_jaJP, kSDKDefStringsResourceID + index_jaJP
}
};

resource LocaleIndex (kSDKDefStringsNoTransResourceID)
{
kStringTableRsrcType,
{
kWildFS, k_Wild, kSDKDefStringsNoTransResourceID + index_enUS
}
};

resource StringTable (kSDKDefStringsNoTransResourceID + index_enUS)
{
k_enUS,									// Locale Id
kEuropeanMacToWinEncodingConverter,		// Character encoding converter
{
// No-Translate strings go here:

}
};

/*
// Scripting definition.
*/
resource VersionedScriptElementInfo(1)
{
//Contexts
{
// Scripting support added at InDesign CS 2.0.
kFiredrakeScriptVersion, kCoreScriptManagerBoss, kWildFS, k_Wild,
}

//Elements
{
// TriasPageData
Property
{
kXRLPageDataPropScriptElement,		// this property's script element ID
p_XRailPageData,						// ScriptID
"TriasPageData",						// name
"Page Data for Trias use",			// description
VariableArrayType(2){StringType, Int32Type}, // type
{}										// alternate types
kNoAttributeClass,						// attribute class ID
}

Provider
{
kXRLScriptProviderBoss,
{
// Put the IFormeData property on the page item scripting object.
// Scripting objects that inherit from kPageItemObjectScriptElement
// will inherit the property. These scripting objects include
// rectangle, polygon, oval, etc.
Object{ kPageObjectScriptElement },

// The FormeData property
Property{ kXRLPageDataPropScriptElement, kReadWrite },
}
}
}
};


#endif // __ODFRC__

#include "XRL_enUS.fr"
#include "XRL_frFR.fr"

//  Code generated by DollyXs code generator
